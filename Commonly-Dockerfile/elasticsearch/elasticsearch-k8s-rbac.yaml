---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: es-sa-cluster

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata: 
  name: es-sa-role
  namespace: default
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: es-sa-role-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: es-sa-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: es-sa-role
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: es-sa-cluster-role
rules:
  - apiGroups: [ "" ]
    resources:
      - "pods" # @feature: cluster; OAP needs to read other OAP Pods information to form a cluster
               # @feature: als; OAP needs to read Pods metadata to analyze the access logs
      - "services" # @feature: als; OAP needs to read services metadata to analyze the access logs
      - "endpoints" # @feature: als; OAP needs to read endpoints metadata to analyze the access logs
      - "nodes" # @feature: als; OAP needs to read nodes metadata to analyze the access logs
      - "configmaps"
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [ "batch" ]
    resources:
      - "jobs" # @feature: cluster; OAP needs to wait for the init job to complete
    verbs: [ "get", "watch", "list" ]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: es-sa-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: es-sa-cluster-role
subjects:
  - kind: ServiceAccount
    name: es-sa-cluster
    namespace: default
